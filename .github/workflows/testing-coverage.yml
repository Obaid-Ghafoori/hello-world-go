# name: Unit Test and Coverage Enforcement

# on:
#   push:
#     branches:
#       - main
#       - develop
#       - feature/*
#   pull_request:
#     branches:
#       - main
#       - develop
#       - feature/*

# jobs:
#   unit-test-and-coverage:
#     name: Unit Test and Coverage Enforcement
#     runs-on: ubuntu-22.04

#     steps:
#     - name: Checkout Repository Code
#       uses: actions/checkout@v2

#     - name: Set up Go
#       uses: actions/setup-go@v4
#       with:
#         go-version: '1.20' 

#     - name: Run Unit Tests and Calculate Coverage
#       id: tests
#       run: |
#         echo "Running unit tests and calculating coverage..."
#         go test -coverprofile=coverage.out -json ./... > test-results.json

#     - name: Check Test Results
#       run: |
#         echo "Checking for failed tests..."
#         FAILED_TESTS=$(jq -r 'select(.Action == "fail") | .Test' test-results.json | uniq)
#         if [ -n "$FAILED_TESTS" ]; then
#           echo "::error::Unit tests failed. Failed test(s):"
#           echo "$FAILED_TESTS" | while read -r test; do
#             echo "::error::  - $test"
#           done
#           echo "::error::Pipeline will fail due to failing tests."
#           exit 1
#         fi

#     - name: Enforce Minimum Coverage Threshold
#       run: |
#         echo "Checking test coverage..."
#         COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
#         echo "Current test coverage: $COVERAGE%"
#         if (( $(echo "$COVERAGE < 80" | bc -l) )); then
#           echo "::error::Test coverage is below the required threshold of 80%. Current coverage: $COVERAGE%"
#           exit 1
#         fi
